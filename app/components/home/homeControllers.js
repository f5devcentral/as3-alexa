"use strict";!function(){function t(t,a,i,e,n,o,s){var l=this;l.inLimit=!0,l.updateTimer;var r={nodes:[{id:"BIG IP",group:50,type:"bigip",status:"online"}],links:[]};l.polling=function(){l.updateTimer=setTimeout(function(){l.pollData(l.polling)},3e3)},l.start=function(){clearTimeout(l.updateTimer),l.polling(),console.log("graph start - polling")},l.stop=function(){clearTimeout(l.updateTimer),console.log("graph stop - polling")},l.pollData=function(e){s.graphResource.query(function(t){if(t.message.tenants){var a=s.processData(t);if(a.list[0]){if(angular.equals(a.list[0],l.latestGraph()))l.inLimit=!0;else{var i=angular.copy(a.list[0]);l.updateGraph(i),l.data=a.list[0],l.inLimit=!0}e()}else l.updateGraph(r),l.data=r,l.inLimit=!1,e()}else l.updateGraph(r),l.data=r,l.inLimit=!0,e()},function(t){console.log(t),l.updateGraph(r),l.data=r,403===t.status&&t.data.message&&t.data.message.indexOf("Dataset is too large")?l.inLimit=!1:l.inLimit=!0,e()})},l.getData=function(){s.graphResource.query(function(t){if(t.message.tenants){var a=s.processData(t);if(a.list[0])if(angular.equals(a.list,l.latestGraph()))l.inLimit=!0;else{var i=angular.copy(a.list[0]);l.updateGraph(i),l.data=a.list[0],l.inLimit=!0}else l.updateGraph(r),l.data=r,l.inLimit=!1}else l.updateGraph(r),l.data=r,l.inLimit=!0},function(t){console.log(t),l.updateGraph(r),l.data=r,403===t.status&&t.data.message&&t.data.message.indexOf("Dataset is too large")?l.inLimit=!1:l.inLimit=!0})},l.updateGraph=function(t){l.oData=t},l.latestGraph=function(){return l.oData},t.$on("$destroy",function(){l.stop()}),l.getData(),l.start()}angular.module("homeControllers",[]).controller("HomeCtrl",function(){var t=this;t.stats={},t.nodeDiscovery=!1,t.message=""}).controller("GraphCtrl",t).controller("HelpCtrl",function(){}),t.$inject=["$scope","$log","$timeout","$interval","$q","uiGridConstants","GraphService"]}();
//# sourceMappingURL=../../maps/home/homeControllers.js.map
