{"version":3,"sources":["node/nodeServices.js"],"names":["NodeFactory","$resource","node","resource","query","method","isArray","cancellable","get","filter","rows","filterValue","arr","matcher","RegExp","forEach","match","field","row","entity","setList","data","nodes","getList","list","angular","module","factory"],"mappings":"AAAA,cAMC,WAMG,SAASA,EAAaC,GAElB,IAAMC,EAAO,CAAbA,KAAa,IA2Cb,OAxCAA,EAAKC,SAAWF,EAAU,8EAA+E,GAAI,CAA7GC,MAAKC,CACDC,OAAO,MACHC,SAAQ,EACRC,aAAS,EACTC,QAAAA,KAGJC,IAAK,CAALA,OAAK,MACDH,aAAQ,EACRE,QAAAA,OAMRL,EAAKO,OAAS,SAAUC,EAAMC,EAAaC,GAA3CV,IAAKO,EAAS,IAAUC,OAAMC,GAe1B,OAdAD,EAAMG,QAAAA,SAAcC,GACpBJ,IAAKK,GAAQ,EACTH,EAAII,QAAQ,SAAAC,GAIJC,EAAIC,OAAOF,IAAUC,EAAIC,OAAOF,GAAOD,MAAMH,KAA7CK,GAAIC,KAIPH,IAADE,EAACF,SAAO,KAITN,GAGXR,EAAKkB,QAAU,SAAUC,GAAzBnB,EAAKkB,KAAUC,EAAAC,OAGfpB,EAAKqB,QAAU,WAAfrB,OAAKqB,EAAUC,MAIRtB,0BAnDduB,QAAAC,OAAY,eAAA,IAGTC,QAAQ,cAAe3B,GAH1B","file":"../../components/node/nodeServices.js","sourcesContent":["/*\n * Copyright (c) 2018, F5 Networks, Inc. All rights reserved.\n * No part of this software may be reproduced or transmitted in any\n * form or by any means, electronic or mechanical, for any purpose,\n * without express written permission of F5 Networks, Inc.\n */\n(function () {\n\n    angular.module('nodeServices', []).\n    factory('NodeFactory', NodeFactory);\n\n\n    function NodeFactory ($resource) {\n\n        const node = {};\n        node.data = [];\n\n        node.resource = $resource('https://2qm2k0jtsh.execute-api.us-west-2.amazonaws.com/default/awsDiscovery', {}, {\n            query: {\n                method: 'GET',\n                isArray: false,\n                cancellable: true,\n                timeout: 30000\n            },\n            get: {\n                method: 'GET',\n                cancellable: true,\n                timeout: 30000\n            }\n        });\n\n        // Note: Unable to filter according to a number\n        node.filter = function (rows, filterValue, arr) {\n            const matcher = new RegExp(filterValue);\n            rows.forEach(function (row) {\n                let match = false;\n                arr.forEach(function (field) {\n                    // Using this for dev purpose\n                    // [ 'name', 'email', 'body' ].forEach(function( field ){\n                    if (row.entity[field] && row.entity[field].match(matcher)) {\n                        match = true;\n                    }\n                });\n                if (!match) {\n                    row.visible = false;\n                }\n            });\n            return rows;\n        };\n\n        node.setList = function (data) {\n            node.list = data.nodes;\n        };\n        node.getList = function () {\n            return node.list;\n        };\n\n        return node;\n\n    }\n  \n}());\n"]}