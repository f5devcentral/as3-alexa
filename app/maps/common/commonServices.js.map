{"version":3,"sources":["common/commonServices.js"],"names":["ModalService","$uibModal","open","controller","controllerAs","params","animation","templateUrl","template","size","resolve","ValidationService","uiGridValidateService","CONSTANTS","validation","setValidator","argument","oldValue","newValue","rowEntity","colDef","REGEXIP","test","isPortValid","REGEXPORT","angular","module","factory","constant"],"mappings":"AAAA,yBAgBI,SAASA,EAAcC,GACnB,MAAO,CADXC,KAASF,SAAcC,EAAAA,EAAWE,EAAAC,EAAAC,GACvB,OAAAJ,EAAAC,KAAA,CACGI,WAAA,EACFC,YAAiBL,EACbI,WAAWH,EACXI,aAAaC,EACbL,KAAAA,EACAC,QAAAA,CACAK,OAAMA,WACNC,OAASL,QAUzB,SAASM,EAAmBC,EAAuBC,GAC/C,IAAMC,EAAa,GAqCnB,OAlCAF,EAAsBG,aAAa,YAC/B,SAAUC,GAEN,OAAO,SAAUC,EAAUC,EAAUC,EAAWC,GAAzC,OAAAF,GAIIL,EAAUQ,QAAQC,KAAKJ,KAMlC,SAAAF,GAAA,MAAA,6CAAoDA,EAApD,4CAKRF,EAGeS,YAAUN,EAAoBE,aAAmB,UAF5D,SAGaD,GADT,OAAO,SAAUD,EAAUC,EAAUC,EAAWC,GAI5C,OAAOP,GAKXA,EAAAW,UAAAF,KAAAJ,KADJ,SAAUF,GA9DtB,MAAA,8CAAAA,EAAA,6BAmEeF,0EAlEXW,QAAQC,OAAO,iBAAkB,IACjCC,QAAQ,eAAgB3B,GACxB2B,QAAQ,oBAAqBhB,GAF7Bc,SAAQC,YAAO,CAKXL,QAAS,mKADbO,UAAS","file":"../../components/common/commonServices.js","sourcesContent":["/*\n * Copyright (c) 2018, F5 Networks, Inc. All rights reserved.\n * No part of this software may be reproduced or transmitted in any\n * form or by any means, electronic or mechanical, for any purpose,\n * without express written permission of F5 Networks, Inc.\n */\n(function () {\n    angular.module('commonServices', []).\n    factory('ModalService', ModalService).\n    factory('ValidationService', ValidationService).\n    // CONSTANTS\n    constant('CONSTANTS', {\n        REGEXIP: /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n        REGEXPORT: /^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/\n    });\n\n    function ModalService ($uibModal) {\n        return {\n            open: function (size, template, controller, controllerAs, params) {\n                return $uibModal.open({\n                    animation: true,\n                    templateUrl: template,\n                    controller: controller,\n                    controllerAs: controllerAs,\n                    size: size,\n                    resolve: {\n                        params: function () {\n                            return params;\n                        }\n                    }\n                });\n            }\n        };\n    }\n\n    function ValidationService (uiGridValidateService, CONSTANTS) {\n        const validation = {};\n\n        /** Validation Service for IP Address - Alpha (might not be stable!!)  **/\n        uiGridValidateService.setValidator('ipAddress',\n            function (argument) {\n                // UI-Grid Validation Service - example code has newValue and oldValue reversed!\n                return function (oldValue, newValue, rowEntity, colDef) {\n                    if (!newValue) {\n                        return true; // We should not test for existence here\n                    }\n                    return CONSTANTS.REGEXIP.test(newValue);\n                    // return newValue.startsWith(argument);\n\n                };\n            },\n            function (argument) {\n                return `Please enter a valid ip address of format ${argument} with each number ranging from 0 to 255`;\n            }\n        );\n\n        /** Validation Service for Port - Alpha (might not be stable!!)  **/\n        validation.isPortValid = uiGridValidateService.setValidator('portNum',\n            function (argument) {\n                // UI-Grid Validation Service - example code has newValue and oldValue reversed!\n                return function (oldValue, newValue, rowEntity, colDef) {\n                    if (!newValue) {\n                        return true; // We should not test for existence here\n                    }\n                    return CONSTANTS.REGEXPORT.test(newValue);\n\n                };\n            },\n            function (argument) {\n                return `Please enter a valid port number of format ${argument} ranging from 0 to 65535`;\n            }\n        );\n\n        return validation;\n\n    }\n}());\n"]}