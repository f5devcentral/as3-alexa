{"version":3,"sources":["main/mainControllers.js"],"names":["MainCtrl","$scope","$rootScope","$state","$interval","$location","ProxyService","LogService","UserService","AuthService","AWSService","ModalService","main","logLevel","year","Date","getFullYear","version","getLogged","resource","query","data","err","console","log","setLogLevel","level","updateLevel","getLogLevel","getLevel","setUserCred","open","saveUser","$on","event","params","user","password","$update","SetCredentials","path","setAWSCred","$broadcast","saveAWS","accessKeyId","secretAccessKey","region","aws","logout","loggedIn","loggedOut","UserErrorCtrl","$uibModalInstance","errCtrl","errors","detail","indexOf","val","JSON","parse","message","split","Ok","close","UserCtrl","submit","username","AWSErrorCtrl","AWSCtrl","save","angular","module","controller","$inject"],"mappings":"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","file":"../../components/main/mainControllers.js","sourcesContent":["/*\n * Copyright (c) 2018, F5 Networks, Inc. All rights reserved.\n * No part of this software may be reproduced or transmitted in any\n * form or by any means, electronic or mechanical, for any purpose,\n * without express written permission of F5 Networks, Inc.\n */\n(function () {\n\n  function MainCtrl ($scope, $rootScope, $state, $interval, $location, ProxyService, LogService, UserService, AuthService, AWSService, ModalService) {\n\n    const main = this;\n    main.logLevel = 'info';\n    main.year = new Date().getFullYear();\n    main.version = null;\n\n    if (AuthService.getLogged()) {\n      ProxyService.resource.query((data) => {\n        main.version = data.version;\n      }, (err) => {\n        console.log(err);\n      });\n\n    }\n\n    main.setLogLevel = function (level) {\n      return LogService.resource.updateLevel({}, {level: level}, (data) => {\n        main.logLevel = data.level;\n      }, (err) => {\n        console.log(err);\n      });\n    };\n\n    main.getLogLevel = function () {\n      return LogService.resource.getLevel({}, {}, (data) => {\n        main.logLevel = data.level;\n      }, (err) => {\n        console.log(err);\n      });\n    };\n\n\n    // Set Username && Password\n    main.setUserCred = function () {\n      ModalService.open('md', 'UserTpl.html', 'UserCtrl', 'user');\n    };\n\n    /** User Credentials Saved **/\n    const saveUser = $rootScope.$on('user-submit', function (event, params) {\n      if (params.user !== ' ' && params.user !== '' && params.password !== ' ' && params.password !== '') {\n        const user = new UserService.resource(params);\n        return user.$update((data) => {\n          // Set new user credentials\n          AuthService.SetCredentials(params.user, params.password);\n          $location.path('/login');\n        }, (err) => {\n          console.log(err);\n          ModalService.open('md', 'errUserTpl.html', 'UserErrorCtrl', 'errCtrl', err);\n        });\n      }\n      return;\n\n    });\n\n\n    // Set Username && Password\n    main.setAWSCred = function () {\n      $rootScope.$broadcast('aws-config');\n      ModalService.open('md', 'AWSTpl.html', 'AWSCtrl', 'aws');\n    };\n\n    /** User Credentials Saved **/\n    const saveAWS = $rootScope.$on('aws-save', function (event, params) {\n      console.log('params');\n      console.log(params);\n      if (params.accessKeyId !== ' ' && params.accessKeyId !== '' && params.secretAccessKey !== ' ' && params.secretAccessKey !== '' && params.region !== ' ' && params.region !== '') {\n        const aws = new AWSService.resource(params);\n        return aws.$update((data) => {\n          $rootScope.$broadcast('aws-saved');\n          console.log('data returned on user saved');\n          console.log(data);\n        }, (err) => {\n          $rootScope.$broadcast('aws-err');\n          console.log(err);\n          ModalService.open('md', 'errAWSTpl.html', 'AWSErrorCtrl', 'errCtrl', err);\n        });\n      }\n      return;\n\n    });\n\n\n    // Logout\n    main.logout = () => {\n      $rootScope.$broadcast('logged-out');\n    };\n\n    // Event Listeners ====================================================================\n    /** Start polling on successful login **/\n    const loggedIn = $rootScope.$on('logged-in', function () {\n      ProxyService.resource.query((data) => {\n        main.version = data.version;\n      });\n    });\n\n    /** Stop polling on logout **/\n    const loggedOut = $rootScope.$on('logged-out', function () {\n    });\n\n    $scope.$on('$destroy', function () {\n      loggedIn();\n      loggedOut();\n    });\n\n  }\n\n\n  /** Controller for Error Template **/\n  function UserErrorCtrl ($scope, $rootScope, $uibModalInstance, params) {\n    const errCtrl = this;\n    errCtrl.err = params;\n    if (params.data) {\n      console.log(params.data);\n      if (params.data.errors.detail.indexOf('message') !== -1) {\n        const val = JSON.parse(params.data.errors.detail).message;\n        if (val.indexOf('body') !== -1) {\n          errCtrl.err.detail = val.split('body:')[1];\n        } else {\n          errCtrl.err.detail = val;\n        }\n      } else {\n        errCtrl.err.detail = params.data.errors.detail;\n      }\n\n    } else {\n      errCtrl.err.detail = 'Details not available';\n    }\n\n    errCtrl.Ok = function () {\n      $rootScope.$broadcast('err-user', params);\n      $uibModalInstance.close();\n    };\n\n  }\n\n\n  /** Controller for Saving User Credentials Confirmation Template **/\n  function UserCtrl ($scope, $rootScope, $uibModalInstance) {\n    const user = this;\n\n    user.submit = function (username, password) {\n      const params = {\n        user: username,\n        password: password\n      };\n      $rootScope.$broadcast('user-submit', params);\n      $uibModalInstance.close();\n    };\n\n    user.close = function () {\n      $uibModalInstance.close();\n    };\n  }\n\n  /** Controller for Error Template **/\n  function AWSErrorCtrl ($scope, $rootScope, $uibModalInstance, params) {\n    const errCtrl = this;\n    errCtrl.err = params;\n    if (params.data) {\n      console.log(params.data);\n      if (params.data.errors.detail.indexOf('message') !== -1) {\n        const val = JSON.parse(params.data.errors.detail).message;\n        console.log(val);\n        if (val.indexOf('body') !== -1) {\n          errCtrl.err.detail = val.split('body:')[1];\n        } else {\n          errCtrl.err.detail = val;\n        }\n      } else {\n        errCtrl.err.detail = params.data.errors.detail;\n      }\n\n    } else {\n      errCtrl.err.detail = 'Details not available';\n    }\n\n    errCtrl.Ok = function () {\n      $rootScope.$broadcast('err-aws', params);\n      $uibModalInstance.close();\n    };\n  }\n\n  /** Controller for Saving User Credentials Confirmation Template **/\n  function AWSCtrl ($scope, $rootScope, $uibModalInstance) {\n    const aws = this;\n\n    aws.save = function (accessKeyId, secretAccessKey, region) {\n      const params = {\n        accessKeyId: accessKeyId,\n        secretAccessKey: secretAccessKey,\n        region: region\n      };\n      $rootScope.$broadcast('aws-save', params);\n      $uibModalInstance.close();\n    };\n\n    aws.close = function () {\n      $uibModalInstance.close();\n    };\n  }\n\n\n  angular.module('mainControllers', []).\n    controller('MainCtrl', MainCtrl).\n    controller('UserCtrl', UserCtrl).\n    controller('UserErrorCtrl', UserErrorCtrl).\n    controller('AWSCtrl', AWSCtrl).\n    controller('AWSErrorCtrl', AWSErrorCtrl);\n\n\n  /** Inject the dependencies - avoid problems during minification **/\n  MainCtrl.$inject = ['$scope', '$rootScope', '$state', '$interval', '$location', 'ProxyService', 'LogService', 'UserService', 'AuthService', 'AWSService', 'ModalService'];\n  UserCtrl.$inject = ['$scope', '$rootScope', '$uibModalInstance'];\n  UserErrorCtrl.$inject = ['$scope', '$rootScope', '$uibModalInstance', 'params'];\n  AWSCtrl.$inject = ['$scope', '$rootScope', '$uibModalInstance'];\n  AWSErrorCtrl.$inject = ['$scope', '$rootScope', '$uibModalInstance', 'params'];\n}());\n"]}