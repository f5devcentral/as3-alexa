{"version":3,"sources":["wsconn/WSConnServices.js"],"names":["angular","module","factory","WSConnService","$resource","wsconn","isConn","wsResource","query","method","isArray","cancellable","timeout","get","save","update","delete","refresh","grid","filter","rows","filterValue","arr","matcher","RegExp","forEach","row","match","field","entity","visible","addRow","data","obj","unshift","deleteRow","id","index","indexOf","splice","setConnection","val","getConnection"],"mappings":"AAAA;;;;;;;;AAMC,CAAA,YAAY;;;EAEXA,QAAQC,OAAO,kBAAkB,IAC/BC,QAAQ,iBAAiBC;;EAE3B,SAASA,cAAeC,WAAW;;IAEjC,IAAMC,SAAS;IACfA,OAAOC,SAAS;;IAGhBD,OAAOE,aAAaH,UAAU,kCAAkC,IAAI;MAClEI,OAAO;QACLC,QAAQ;QACRC,SAAS;QACTC,aAAa;QACbC,SAAS;;MAEXC,KAAK;QACHJ,QAAQ;QACRE,aAAa;QACbC,SAAS;;MAEXE,MAAM,EAACL,QAAQ;MACfM,QAAQ;QACNN,QAAQ;QACRC,SAAS;;MAEXM,QAAQ;;QAENP,QAAQ;;;;;IAMZJ,OAAOY,UAAU,UAAUC,MAAM;MAC/BA,KAAKD;;;;IAIPZ,OAAOc,SAAS,UAAUC,MAAMC,aAAaC,KAAK;MAChD,IAAMC,UAAU,IAAIC,OAAOH;MAC3BD,KAAKK,QAAQ,UAAUC,KAAK;QAC1B,IAAIC,QAAQ;QACZL,IAAIG,QAAQ,UAAUG,OAAO;;;UAG3B,IAAIF,IAAIG,OAAOD,UAAUF,IAAIG,OAAOD,OAAOD,MAAMJ,UAAU;YACzDI,QAAQ;;;QAGZ,IAAI,CAACA,OAAO;UACVD,IAAII,UAAU;;;MAGlB,OAAOV;;;IAITf,OAAO0B,SAAS,UAACC,MAAMC,KAAQ;MAC7BD,KAAKE,QAAQD;;;IAIf5B,OAAO8B,YAAY,UAAUH,MAAMI,IAAI;MACrC,IAAMC,QAAQL,KAAKM,QAAQF;MAC3B,IAAIC,QAAQ,CAAC,GAAG;QACdL,KAAKO,OAAOF,OAAO;;QAEnBhC,OAAO2B,OAAOA;;;;IAKlB3B,OAAOmC,gBAAgB,UAAUC,KAAK;MACpCpC,OAAOC,SAASmC;;;IAGlBpC,OAAOqC,gBAAgB,YAAY;MACjC,OAAOrC,OAAOC;;;IAIhB,OAAOD;;KApFX","file":"../../components/wsconn/WSConnServices.js","sourcesContent":["/*\n * Copyright (c) 2018, F5 Networks, Inc. All rights reserved.\n * No part of this software may be reproduced or transmitted in any\n * form or by any means, electronic or mechanical, for any purpose,\n * without express written permission of F5 Networks, Inc.\n */\n(function () {\n\n  angular.module('WSConnServices', []).\n    factory('WSConnService', WSConnService);\n\n  function WSConnService ($resource) {\n\n    const wsconn = {};\n    wsconn.isConn = false;\n\n \n    wsconn.wsResource = $resource('proxy/v1/connections/:ip/:port', {}, {\n      query: {\n        method: 'GET',\n        isArray: false,\n        cancellable: true,\n        timeout: 30000\n      },\n      get: {\n        method: 'GET',\n        cancellable: true,\n        timeout: 30000\n      },\n      save: {method: 'POST'},\n      update: {\n        method: 'PATCH',\n        isArray: false\n      },\n      delete: {\n        // url: 'http://127.0.0.1:8081/proxy/v1/connections/:ip/:port',\n        method: 'DELETE'\n\n      }\n    });\n\n\n    wsconn.refresh = function (grid) {\n      grid.refresh();\n    };\n\n    // Note: Unable to filter according to a number\n    wsconn.filter = function (rows, filterValue, arr) {\n      const matcher = new RegExp(filterValue);\n      rows.forEach(function (row) {\n        let match = false;\n        arr.forEach(function (field) {\n          // Using this for dev purpose\n          // [ 'name', 'email', 'body' ].forEach(function( field ){\n          if (row.entity[field] && row.entity[field].match(matcher)) {\n            match = true;\n          }\n        });\n        if (!match) {\n          row.visible = false;\n        }\n      });\n      return rows;\n    };\n\n\n    wsconn.addRow = (data, obj) => {\n      data.unshift(obj);\n    };\n\n\n    wsconn.deleteRow = function (data, id) {\n      const index = data.indexOf(id);\n      if (index > -1) {\n        data.splice(index, 1);\n\n        wsconn.data = data;\n      }\n    };\n\n\n    wsconn.setConnection = function (val) {\n      wsconn.isConn = val;\n    };\n\n    wsconn.getConnection = function () {\n      return wsconn.isConn;\n    };\n\n\n    return wsconn;\n\n  }\n}());\n"]}